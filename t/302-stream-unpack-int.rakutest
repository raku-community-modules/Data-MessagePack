use v6;
use Test;
use Data::MessagePack::StreamingUnpacker;

plan 23;

my @to_send = 0, 1, 127,
    0xcc, 0x80,
    0xcc, 0xff,
    0xcd, 0x01, 0x00,
    0xcd, 0xff, 0xff,
    0xce, 0x00, 0x01, 0x00, 0x00,
    0xce, 0xff, 0xff, 0xff, 0xff,
    0xcf, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
    0xcf, 0x00, 0x00, 0xa7, 0xc5, 0xac, 0x47, 0x1b, 0x47,
    0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff,
    0xf0,
    0xe0,
    0xd0, 0xdf,
    0xd0, 0x80,
    0xd1, 0xff, 0x7f,
    0xd1, 0x80, 0x00,
    0xd2, 0xff, 0xff, 0x7f, 0xff,
    0xd2, 0x80, 0x00, 0x00, 0x00,
    0xd3, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff,
    0xd3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00;

my @expected = 0, 1, 127, 128, 255,
 256, 65535, 65536, 4294967295, 4294967296, 184467440737095, 2**64 -1,
 -1, -16, -32, -33, -128, -129, -32768, -32769, -2147483648, -2147483649, -9223372036854775808;

my $supplier = Supplier.new;

my $s = Data::MessagePack::StreamingUnpacker.new( source => $supplier.Supply );
my $unpacked = $s.Supply();

$unpacked.tap( -> $v {
    my $expected = @expected.shift;
    ok $expected eqv $v, "Expected value received";
});

for @to_send -> $byte {
    $supplier.emit( $byte );
}
